apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose-prod.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: pg-mirror
    pod-security.kubernetes.io/enforce: privileged
  name: pg-mirror
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pg-mirror
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose-prod.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: pg-mirror
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 1000
      containers:
        - name: pg-mirror
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsUser: 1000
            runAsGroup: 1000
          env:
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: pdb-mirror-creds
                  key: db-host
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: pdb-mirror-creds
                  key: db-name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: pdb-mirror-creds
                  key: db-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pdb-mirror-creds
                  key: db-pass
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: pdb-mirror-creds
                  key: db-port
          image: postgres:14
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
            initialDelaySeconds: 10
            failureThreshold: 5
            periodSeconds: 5
            timeoutSeconds: 5
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            requests:
              cpu: "1"
              memory: "512M"
            limits:
              cpu: "1"
              memory: "1024M"
          volumeMounts:
            - name: pdb-mirror-data
              mountPath: /var/lib/postgresql/data
              readOnly: false
      restartPolicy: Always
      volumes:
        - name: pdb-mirror-data
          persistentVolumeClaim:
            claimName: pdb-mirror-data